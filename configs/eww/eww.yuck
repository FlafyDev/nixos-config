(defpoll hour :interval "1s" "date '+%H'")
(defpoll min :interval "1s" "date '+%M'")
(defpoll month :interval "1s" "date '+%m'")
(defpoll day :interval "1s" "date '+%d'")
(defpoll fullDate :interval "1s" "date '+%A %B %T'")
(defvar notBatterySaving "true")

(defpoll batteryPercentage :interval "1s" :initial 100 'getBattery percentage')
(defpoll batteryCharging :interval "1s" :initial false 'getBattery charging')
(deflisten workspace "getWorkspaces")
(deflisten volumePercentageWidgetText "volume listen")

;; BAR
(defwindow bar
  :geometry (geometry :height "100%" :width "31px" :anchor "left center")
  :monitor 0 
  ; :exclusive true
  ; :focusable false
  :stacking "bg"
  :reserve 
    (struts 
      :distance "31px" 
      :side "left")
  :windowtype "dock"
  :wm-ignore "false"
  (bar))

(defwidget bar []
  (box :class "eww-bar" :orientation "v"
    (top)
    (center)
    (bottom)))

(defwidget top [] 
  (box :orientation "v"))

(defwidget center []
  (box :orientation "v" :halign "center" :valign "center" :space-evenly "false"
    (workspaces)))

(defwidget bottom []
  (box :class "bottom" :orientation "v" :halign "center" :valign "end" :space-evenly "false" :spacing 15
    ;; (bluetooth)
    (saveBatteryButton)
    (volumePercentage)
    (battery)
    (time)))

;; BAR WIDGETS
(defwidget workspaces []
  (literal :content workspace))

(defwidget volumePercentage []
  (literal :content volumePercentageWidgetText))

(defwidget bluetooth []
  (button 
    (image :path "./bluetoothOff.png")))

(defwidget saveBatteryButton []
  (button :class "batterySaveButton ${notBatterySaving ? "active" : "inactive"}"
          :onclick "saveBattery ${notBatterySaving}"
    (image :path {notBatterySaving ? "./assets/leafDisabled.png" : "./assets/leafEnabled.png"})))

(defwidget battery []
  (box :halign "center" :valign "center" :tooltip "${batteryPercentage}%" :orientation "v" :space-evenly "false"
    (box :halign "center" :valign "start" 
      (box :class "battery-top" :width 5 :height 2))
    (overlay
      (box :class "battery progress-container" 
        (progress :value batteryPercentage :flipped true :orientation "v"))
      (image :visible batteryCharging :path "./assets/batteryCharging.png"))))

(defwidget time []
  (box :class "time" :tooltip "It's ${fullDate}" :orientation "v" :halign "center" :space-evenly "false"
    (box :orientation "h" :halign "center" :space-evenly "false"
      (label :class "hour" :text hour)
      (label :class "min" :text min))
    (box :orientation "h" :halign "center" :space-evenly "false"
      (label :class "month" :text month)
      (label :class "day" :text day))))


